<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:smtp="http://www.mulesoft.org/schema/mule/smtp" xmlns:context="http://www.springframework.org/schema/context" xmlns:file="http://www.mulesoft.org/schema/mule/file" xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:ws="http://www.mulesoft.org/schema/mule/ws" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:mulexml="http://www.mulesoft.org/schema/mule/xml"
	xmlns:json="http://www.mulesoft.org/schema/mule/json"
	xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:cxf="http://www.mulesoft.org/schema/mule/cxf"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/xml http://www.mulesoft.org/schema/mule/xml/current/mule-xml.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/cxf http://www.mulesoft.org/schema/mule/cxf/current/mule-cxf.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ws http://www.mulesoft.org/schema/mule/ws/current/mule-ws.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-current.xsd
http://www.mulesoft.org/schema/mule/smtp http://www.mulesoft.org/schema/mule/smtp/current/mule-smtp.xsd">
<http:listener-config name="HTTP_Listener_Configuration" host="0.0.0.0" port="8083" basePath="/integrationESB" doc:name="HTTP Listener Configuration"/>
    <http:request-config name="HTTP_Request_Configuration" host="localhost" port="8081" basePath="/LatinBank" doc:name="HTTP Request Configuration"/>
    <http:request-config name="HTTP_Request_Configuration1" host="localhost" port="8082" basePath="/BancoChibcha" doc:name="HTTP Request Configuration"/>
    <cxf:configuration name="CXF_Configuration" enableMuleSoapHeaders="true" initializeStaticBusInstance="true" doc:name="CXF Configuration"/>
    <ws:consumer-config name="Web_Service_Consumer" wsdlLocation="http://localhost:8082/BancoChibcha?wsdl" service="IConsultaPrestamo" port="IConsultaPrestamoPort" serviceAddress="http://localhost:8082/BancoChibcha" doc:name="Web Service Consumer"/>
    <db:mysql-config name="MySQL_Configuration" host="192.99.73.159" port="3306" user="usrbanco" password="usrbanco" database="banco_pueblo" doc:name="MySQL Configuration"/>
    <http:listener-config name="HTTP_Listener_Configuration1" host="0.0.0.0" port="8080" basePath="/creditProfile" doc:name="HTTP Listener Configuration"/>
    <db:mysql-config name="MySQL_Configuration1" host="192.99.73.159" port="3306" user="usrbanco" password="usrbanco" database="banco_riesgos" doc:name="MySQL Configuration"/>
    <db:mysql-config name="MySQL_Configuration2" host="192.99.73.159" port="3306" user="usrbanco" password="usrbanco" database="banco_america" doc:name="MySQL Configuration"/>
    <file:connector name="File" autoDelete="true" streaming="true" validateConnections="true" doc:name="File"/>
    <context:property-placeholder location="${mule.env}.properties"/>
    <http:request-config name="HTTP_Request_Configuration2" host="localhost" port="8084" basePath="/creditAgencyService" doc:name="HTTP Request Configuration"/>
    <smtp:gmail-connector name="Gmail" validateConnections="true" doc:name="Gmail"/>
    <file:connector name="File1" readFromDirectory="C:/BrokenBank" autoDelete="false" streaming="true" validateConnections="true" doc:name="File"/>
    <flow name="busintegracionFlow">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/solicitud" allowedMethods="GET" doc:name="HTTP"/>
        <set-payload value="#[message.inboundProperties.'http.query.params']" doc:name="Set Payload"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
        <set-variable variableName="recievedData" value="#[payload]" doc:name="Variable recievedData"/>
        <expression-transformer expression="#[['tipoIdentificacion':flowVars.recievedData.tipoIdentificacion,'numeroIdentificacion':flowVars.recievedData.numeroIdentificacion,'nombres':flowVars.recievedData.nombres,'apellidos':flowVars.recievedData.apellidos]]" doc:name="Entrada de Datos Expression"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <set-variable variableName="CreditScore" value="400" doc:name="CreditScore Variable"/>
        <set-variable variableName="CreditHistoryLegth" value="7" doc:name="CreditHistoryLegth Variable"/>
        <choice doc:name="Cumple con las condiciones Choice">
            <when expression="#[flowVars.CreditScore &gt; 399 &amp;&amp; flowVars.CreditHistoryLegth &gt; 6 &amp;&amp; flowVars.recievedData.cantidadSolicitada &gt; 20000000]">
                <flow-ref name="BancodeAmericaSub_Flow" doc:name="BancodeAmericaSub_Flow"/>
                <set-variable variableName="interesAmerica" value="#[payload.interes]" doc:name="Variable interesAmerica"/>
                <set-variable variableName="tipoTasaAmerica" value="#[payload.tipoTasa]" doc:name="Variable tipoTasaAmerica"/>
                <choice doc:name="Choice">
                    <when expression="#[flowVars.tipoTasaAmerica == 'NB' || flowVars.tipoTasaAmerica == 'BV']">
                        <expression-transformer expression="#[flowVars.interesAmerica/2]" doc:name="Expression Bimensual"/>
                    </when>
                    <when expression="#[flowVars.tipoTasaAmerica == 'EA']">
                        <expression-transformer expression="#[(java.lang.Math.pow((1 + flowVars.interesAmerica),(30/360))-1)*100]" doc:name="Expression Efectiva Anual"/>
                    </when>
                    <otherwise>
                        <expression-transformer expression="#[payload]" doc:name="Expression"/>
                    </otherwise>
                </choice>
                <set-variable variableName="interesAmericaMV" value="#[payload]" doc:name="Variable interesAmericaMV"/>
                <flow-ref name="BrokenBankSub_Flow" doc:name="BrokenBankSub_Flow"/>
                <set-variable variableName="interesBroken" value="#[payload.interes]" doc:name="Variable interesBroken"/>
                <set-variable variableName="tipoTasaBroken" value="#[payload.tipoTasa]" doc:name="Variable tipoTasaBroken"/>
                <choice doc:name="Choice">
                    <when expression="#[flowVars.tipoTasaBroken == 'NB' || flowVars.tipoTasaBroken == 'BV']">
                        <expression-transformer expression="#[flowVars.interesBroken/2]" doc:name="Expression Bimensual"/>
                    </when>
                    <when expression="#[flowVars.tipoTasaBroken == 'EA']">
                        <expression-transformer expression="#[(java.lang.Math.pow((1 + flowVars.interesBroken),(30/360))-1)*100]" doc:name="Expression Efectiva Anual"/>
                    </when>
                    <otherwise>
                        <expression-transformer expression="#[payload]" doc:name="Expression"/>
                    </otherwise>
                </choice>
                <set-variable variableName="interesBrokenMV" value="#[payload]" doc:name="Variable interesBrokenMV"/>
                <choice doc:name="Choice">
                    <when expression="#[flowVars.interesAmericaMV &lt;= flowVars.interesBrokenMV]">
                        <set-payload value="Su mejor elecci&#243;n es Banco del Pueblo, con una tasa de inter&#233;s del #[flowVars.interesAmerica] #[flowVars.tipoTasaAmerica]" doc:name="Set Payload America"/>
                    </when>
                    <when expression="#[flowVars.interesAmericaMV &gt; flowVars.interesBrokenMV]">
                        <set-payload value="Su mejor elecci&#243;n es Banco del Pueblo, con una tasa de inter&#233;s del #[flowVars.interesBroken] #[flowVars.tipoTasaBroken]" doc:name="Set Payload Broken"/>
                    </when>
                    <otherwise>
                        <set-payload value="Ha ocurrido un error, por favor vuelva a intentarlo." doc:name="Set Payload Error"/>
                    </otherwise>
                </choice>
                <flow-ref name="correoSub_Flow" doc:name="correoSub_Flow"/>
            </when>
            <when expression="#[flowVars.CreditScore &gt; 399 &amp;&amp; flowVars.CreditHistoryLegth &gt; 6 &amp;&amp; flowVars.recievedData.cantidadSolicitada &lt;= 20000000 &amp;&amp; flowVars.recievedData.cantidadSolicitada &gt;= 10000000]">
                <flow-ref name="LatinBankbSub_Flow" doc:name="LatinBankbSub_Flow"/>
                <set-variable variableName="interesLatin" value="#[payload.interes]" doc:name="Variable interesLatin"/>
                <set-variable variableName="tipoTasaLatin" value="#[payload.tipoTasa]" doc:name="Variable tipoTasaLatin"/>
                <choice doc:name="Choice">
                    <when expression="#[flowVars.tipoTasaLatin == 'NB' || flowVars.tipoTasaLatin == 'BV']">
                        <expression-transformer expression="#[flowVars.interesLatin/2]" doc:name="Expression Bimensual"/>
                    </when>
                    <when expression="#[flowVars.tipoTasaLatin == 'EA']">
                        <expression-transformer expression="#[(java.lang.Math.pow((1 + flowVars.interesLatin),(30/360))-1)*100]" doc:name="Expression Efectiva Anual"/>
                    </when>
                    <otherwise>
                        <expression-transformer expression="#[payload]" doc:name="Expression"/>
                    </otherwise>
                </choice>
                <set-variable variableName="interesLatinMV" value="#[payload]" doc:name="Variable interesLatinMV"/>
                <flow-ref name="BancoChibchabSub_Flow" doc:name="BancoChibchabSub_Flow"/>
                <set-variable variableName="interesChibcha" value="#[payload.interes]" doc:name="Variable interesChibcha"/>
                <set-variable variableName="tipoTasaChibcha" value="#[payload.tipoTasa]" doc:name="Variable tipoTasaChibcha"/>
                <choice doc:name="Choice">
                    <when expression="#[flowVars.tipoTasaChibcha == 'NB' || flowVars.tipoTasaChibcha == 'BV']">
                        <expression-transformer expression="#[flowVars.interesChibcha]/2" doc:name="Expression Bimensual"/>
                    </when>
                    <when expression="#[flowVars.tipoTasaChibcha == 'EA']">
                        <expression-transformer expression="#[(java.lang.Math.pow((1 + flowVars.interesChibcha),(30/360))-1)*100]" doc:name="Expression Efectiva Anual"/>
                    </when>
                    <otherwise>
                        <expression-transformer expression="#[payload]" doc:name="Expression"/>
                    </otherwise>
                </choice>
                <set-variable variableName="interesChibchaMV" value="#[payload]" doc:name="Variable interesChibchaMV"/>
                <choice doc:name="Choice">
                    <when expression="#[flowVars.interesLatinMV &lt;= flowVars.interesChibchaMV]">
                        <set-payload value="Su mejor elecci&#243;n es Latin Bank, con una tasa de inter&#233;s del #[flowVars.interesLatin] #[flowVars.tipoTasaLatin]" doc:name="Set Payload Latin"/>
                    </when>
                    <when expression="#[flowVars.interesLatinMV &lt;= flowVars.interesChibchaMV]">
                        <set-payload value="Su mejor elecci&#243;n es Banco Chibcha, con una tasa de inter&#233;s del #[flowVars.interesChibcha] #[flowVars.tipoTasaChibcha]" doc:name="Set Payload Chibcha"/>
                    </when>
                    <otherwise>
                        <set-payload value="Ha ocurrido un error, por favor vuelva a intentarlo." doc:name="Set Payload Error"/>
                    </otherwise>
                </choice>
                <flow-ref name="correoSub_Flow" doc:name="correoSub_Flow"/>
            </when>
            <when expression="#[flowVars.CreditScore &gt; 399 &amp;&amp; flowVars.CreditHistoryLegth &gt; 6 &amp;&amp; flowVars.recievedData.cantidadSolicitada &lt; 10000000]">
                <flow-ref name="BancoPuebloSub_Flow" doc:name="BancoPuebloSub_Flow"/>
                <set-variable variableName="interesSeleccionado" value="#[payload.interes]" doc:name="Variable interesSeleccionado"/>
                <set-variable variableName="tipoTasaSeleccionada" value="#[payload.tipoTasa]" doc:name="Variable tipoTasaSeleccionada"/>
                <set-payload value="Su mejor elecci&#243;n es Banco del Pueblo, con una tasa de inter&#233;s del #[flowVars.interesSeleccionado] #[flowVars.tipoTasaSeleccionada]" doc:name="Set Payload"/>
                <flow-ref name="correoSub_Flow" doc:name="correoSub_Flow"/>
            </when>
            <otherwise>
                <set-payload doc:name="Set Payload" value="Ha ocurrido un error, por favor vuelva a intentarlo."/>
                <flow-ref name="correoSub_Flow" doc:name="correoSub_Flow"/>
            </otherwise>
        </choice>
    </flow>
    <sub-flow name="ConsultaElRiesgoDeTuCliente.comSub_Flow">
        <set-variable variableName="payloadVar" value="#[payload]" doc:name="Variable"/>
        <object-to-string-transformer doc:name="Object to String"/>
        <logger message="#[payload]" level="INFO" doc:name="Logger"/>
        <http:request config-ref="HTTP_Request_Configuration2" path="/creditProfile" method="POST" doc:name="HTTP">
            <http:request-builder>
                <http:query-param paramName="Cliente" value="#[payload]"/>
            </http:request-builder>
        </http:request>
        <json:object-to-json-transformer returnClass="java.util.HashMap" doc:name="Entrada de datos JSON to Object"/>
        <logger message="Riesgo: #[payload]" level="INFO" doc:name="Logger"/>
    </sub-flow>
    <sub-flow name="LatinBankbSub_Flow">
        <http:request config-ref="HTTP_Request_Configuration" path="/prestamo/consultar" method="POST" doc:name="HTTP">
            <http:request-builder>
                <http:query-param paramName="data" value="#[flowVars.recievedData]"/>
            </http:request-builder>
        </http:request>
        <object-to-string-transformer doc:name="Object to String"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <set-variable variableName="latinBankData" value="#[payload]" doc:name="Variable latinBankData"/>
    </sub-flow>
    <sub-flow name="BancoChibchabSub_Flow">
        <ws:consumer config-ref="Web_Service_Consumer" operation="consultaPrestamo" doc:name="Web Service Consumer"/>
        <json:xml-to-json-transformer doc:name="XML to JSON"/>
        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
        <logger message="BancoChibcha: #[payload]" level="INFO" doc:name="Logger"/>
    </sub-flow>
    <sub-flow name="BancoPuebloSub_Flow">
        <db:select config-ref="MySQL_Configuration" doc:name="Database">
            <db:parameterized-query><![CDATA[Select  tipo As tipoTasa, 
		interes As interes
From  	tasas_prestamo]]></db:parameterized-query>
        </db:select>
        <expression-transformer expression="#[payload[0]]" doc:name="Expression"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
        <logger message="Banco Pueblo: #[payload]" level="INFO" doc:name="Logger"/>
    </sub-flow>
    <sub-flow name="BancodeAmericaSub_Flow">
        <db:select config-ref="MySQL_Configuration2" doc:name="Database">
            <db:parameterized-query><![CDATA[Select  tipoTasa, 
		interes
From  	tasas_prestamo]]></db:parameterized-query>
        </db:select>
        <expression-transformer expression="#[payload[0]]" doc:name="Expression"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
        <logger level="INFO" doc:name="Logger" message="Banco America: #[payload]"/>
    </sub-flow>
    <sub-flow name="BrokenBankSub_Flow">
        <file:outbound-endpoint path="C:/BrokenBank" outputPattern="creditosBancos.xml" responseTimeout="10000" doc:name="File" connector-ref="File1"/>
        <json:xml-to-json-transformer doc:name="XML to JSON"/>
        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
        <logger message="Broken payload: #[payload]" level="INFO" doc:name="Logger"/>
    </sub-flow>
    <sub-flow name="correoSub_Flow">
        <smtp:outbound-endpoint host="smtp.gmail.com" port="587" user="afbl89%40gmail.com" password="Andr3$s890712-61221" connector-ref="Gmail" to="#[flowVars.recievedData.correo]" subject="FinalProjectSOA" responseTimeout="10000" doc:name="SMTP"/>
        <set-payload value="en breve le llegara un correo con la informacion." doc:name="Set Payload"/>
    </sub-flow>
</mule>
